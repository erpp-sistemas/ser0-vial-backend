generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model access {
  access_id Int    @id(map: "PK__access__10FA1E20BA01929C") @default(autoincrement())
  username  String @db.VarChar(100)
  password  String @db.VarChar(255)
  user_id   Int?
  active    Int?   @default(1, map: "DF__access__active__6754599E") @db.SmallInt
  user      user?  @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__access__user_id__72C60C4A")
}

model attendance {
  attendance_id                                                            Int                    @id(map: "PK__attendan__20D6A968418E308B") @default(autoincrement())
  user_id                                                                  Int?
  entry_time                                                               DateTime?              @db.DateTime
  latitude_entry_time                                                      Decimal?               @db.Decimal(19, 6)
  longitude_entry_time                                                     Decimal?               @db.Decimal(19, 6)
  photo_entry_time                                                         String?                @db.VarChar(255)
  departure_time                                                           DateTime?              @db.DateTime
  latitude_departure_time                                                  Decimal?               @db.Decimal(19, 6)
  longitude_departure_time                                                 Decimal?               @db.Decimal(19, 6)
  photo_departure_time                                                     String?                @db.VarChar(255)
  status_entry                                                             Int?
  status_departure                                                         Int?
  cat_status_attendance_attendance_status_departureTocat_status_attendance cat_status_attendance? @relation("attendance_status_departureTocat_status_attendance", fields: [status_departure], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_attendance_status_departure")
  cat_status_attendance_attendance_status_entryTocat_status_attendance     cat_status_attendance? @relation("attendance_status_entryTocat_status_attendance", fields: [status_entry], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_attendance_status_entry")
  user                                                                     user?                  @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_attendance_user")
}

model cat_status_attendance {
  id                                                            Int          @id(map: "PK__cat_stat__3213E83F0987020B") @default(autoincrement())
  description                                                   String?      @db.VarChar(100)
  created_at                                                    DateTime?    @default(now(), map: "DF__cat_statu__creat__30C33EC3") @db.DateTime
  attendance_attendance_status_departureTocat_status_attendance attendance[] @relation("attendance_status_departureTocat_status_attendance")
  attendance_attendance_status_entryTocat_status_attendance     attendance[] @relation("attendance_status_entryTocat_status_attendance")
}

model field {
  field_id        Int          @id(map: "PK__field__1BB6F43EE69412B7") @default(autoincrement())
  name            String?      @db.VarChar(100)
  type_db         String?      @db.VarChar(100)
  type_field_form String?      @db.VarChar(100)
  type_form       String?      @db.VarChar(100)
  options_select  String?      @db.VarChar(100)
  mandatory       Int?         @default(0, map: "DF__field__mandatory__619B8048")
  type_select     String?      @db.VarChar(100)
  parent_field_id Int?
  order           Int?
  form_field      form_field[]
}

model form {
  form_id               Int                     @id(map: "PK__form__190E16C90726D62B") @default(autoincrement())
  name                  String                  @db.VarChar(100)
  route_app_movil       String?                 @db.VarChar(100)
  icono_app_movil       String?                 @db.VarChar(100)
  have_signature        Int?                    @default(0, map: "DF__form__have_signa__5EBF139D") @db.SmallInt
  form_field            form_field[]
  form_photo_form       form_photo_form[]
  place_form            place_form[]
  register_form_dynamic register_form_dynamic[]
}

model form_field {
  id        Int       @id(map: "PK__form_fie__3213E83F7E232475") @default(autoincrement())
  form_id   Int?
  field_id  Int?
  joined_at DateTime? @default(dbgenerated(), map: "DF__form_fiel__joine__6477ECF3") @db.DateTime
  field     field?    @relation(fields: [field_id], references: [field_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__form_fiel__field__71D1E811")
  form      form?     @relation(fields: [form_id], references: [form_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__form_fiel__form___70DDC3D8")
}

model form_photo_form {
  id            Int         @id(map: "PK__form_pho__3213E83FECB64A52") @default(autoincrement())
  form_id       Int?
  photo_form_id Int?
  form          form?       @relation(fields: [form_id], references: [form_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__form_phot__form___73BA3083")
  photo_form    photo_form? @relation(fields: [photo_form_id], references: [photo_form_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__form_phot__photo__74AE54BC")
}

model menu {
  id_menu         Int       @id(map: "PK__menu__68A1D9DB84B33ABF") @default(autoincrement())
  name            String?   @default("", map: "DF__menu__name__06CD04F7") @db.VarChar(255)
  route           String?   @default("", map: "DF__menu__route__07C12930") @db.VarChar(255)
  icon            String?   @default("DoNotDisturb", map: "DF__menu__icon__08B54D69") @db.VarChar(50)
  id_menu_section Int?      @default(0, map: "DF__menu__id_menu_se__09A971A2")
  parent_id       Int?      @default(0, map: "DF__menu__parent_id__0A9D95DB")
  order           Int?      @default(0, map: "DF__menu__order__0B91BA14")
  is_active       Boolean?  @default(false, map: "DF__menu__is_active__0C85DE4D")
  created_at      DateTime? @default(now(), map: "DF__menu__created_at__0D7A0286") @db.DateTime
}

model menu_section {
  id_menu_section Int       @id(map: "PK__menu_sec__0C1A376176B5BD4F") @default(autoincrement())
  name            String?   @default("", map: "DF__menu_secti__name__7F2BE32F") @db.VarChar(255)
  description     String?   @default("", map: "DF__menu_sect__descr__00200768") @db.VarChar(500)
  icon            String?   @default("DoNotDisturb", map: "DF__menu_secti__icon__01142BA1") @db.VarChar(50)
  order           Int?      @default(0, map: "DF__menu_sect__order__02084FDA")
  is_active       Boolean?  @default(false, map: "DF__menu_sect__is_ac__02FC7413")
  created_at      DateTime? @default(now(), map: "DF__menu_sect__creat__03F0984C") @db.DateTime
}

model permission_attendance {
  id           Int       @id(map: "PK__permissi__3213E83FE3C2A586") @default(autoincrement())
  user_id      Int?
  date_init    DateTime? @db.DateTime
  date_end     DateTime? @db.DateTime
  url_document String?   @db.VarChar(255)
  user         user?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_permission_attendance")
}

model photo_form {
  photo_form_id   Int               @id(map: "PK__photo_fo__719E0D6947C82936") @default(autoincrement())
  name            String?           @db.VarChar(100)
  form_photo_form form_photo_form[]
}

model place {
  place_id              Int                     @id(map: "PK__place__BF2B684A21206436") @default(autoincrement())
  name                  String?                 @db.VarChar(100)
  logo                  String?                 @db.VarChar(255)
  latitude              Decimal?                @db.Decimal(19, 6)
  longitude             Decimal?                @db.Decimal(19, 6)
  active                Int?                    @default(1, map: "DF__place__active__47DBAE45") @db.SmallInt
  place_form            place_form[]
  place_user            place_user[]
  register_form_dynamic register_form_dynamic[]
}

model place_user {
  id        Int       @id(map: "PK__place_us__3213E83F593454BF") @default(autoincrement())
  user_id   Int?
  place_id  Int?
  joined_at DateTime? @default(now(), map: "DF__place_use__joine__534D60F1") @db.DateTime
  place     place?    @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__place_use__place__6E01572D")
  user      user?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__place_use__user___6D0D32F4")

  @@unique([user_id, place_id], map: "place_user_index_0")
}

model register_form_dynamic {
  id                Int       @id(map: "PK__register__3213E83FF9413999") @default(autoincrement())
  place_id          Int?
  data_json         String?   @db.VarChar(Max)
  registration_date DateTime? @default(now(), map: "DF__register___regis__5BE2A6F2") @db.DateTime
  form_id           Int?
  latitude          Decimal?  @db.Decimal(19, 6)
  longitude         Decimal?  @db.Decimal(19, 6)
  user_id           Int?
  place             place?    @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__register___place__6FE99F9F")
  form              form?     @relation(fields: [form_id], references: [form_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_form_register")
  user              user?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_register")
}

model role {
  role_id    Int       @id(map: "PK__role__760965CC5665C99B") @default(autoincrement())
  name       String?   @db.VarChar(100)
  active     Int?      @default(1, map: "DF__role__active__4AB81AF0")
  created_at DateTime? @default(now(), map: "DF__role__created_at__4BAC3F29") @db.DateTime
  user       user[]
}

model route_user {
  id         Int       @id(map: "PK__route_us__3213E83FEADED1A7") @default(autoincrement())
  user_id    Int?
  latitude   Decimal?  @db.Decimal(19, 6)
  longitude  Decimal?  @db.Decimal(19, 6)
  created_at DateTime? @db.DateTime
  user       user?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_route_user")
}

model schedule {
  id             Int       @id(map: "PK__schedule__3213E83FB26E716E") @default(autoincrement())
  entry_time     DateTime? @db.Time
  departure_time DateTime? @db.Time
  tolerance      DateTime? @db.Time
  latitude       Decimal?  @db.Decimal(19, 6)
  longitude      Decimal?  @db.Decimal(19, 6)
  user           user[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61062F1F03") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model user {
  user_id               Int                     @id(map: "PK__user__B9BE370F0F90DD8E") @default(autoincrement())
  first_name            String                  @db.VarChar(100)
  middle_name           String?                 @db.VarChar(100)
  maternal_surname      String?                 @db.VarChar(100)
  paternal_surname      String                  @db.VarChar(100)
  birthdate             DateTime?               @db.Date
  photo_url             String?                 @db.VarChar(255)
  entry_date            DateTime?               @db.Date
  low_date              DateTime?               @db.Date
  active                Int?                    @default(1, map: "DF__user__active__4E88ABD4") @db.SmallInt
  access_web            Int?                    @default(1, map: "DF__user__access_web__4F7CD00D") @db.SmallInt
  access_movil          Int?                    @default(1, map: "DF__user__access_mov__5070F446") @db.SmallInt
  role_id               Int?
  theme_color           String?                 @default("#2196F3", map: "DF__user__theme_colo__7C4F7684") @db.VarChar(7)
  schedule_id           Int?                    @default(1, map: "DF__user__schedule_i__1332DBDC")
  access                access[]
  attendance            attendance[]
  permission_attendance permission_attendance[]
  place_user            place_user[]
  register_form_dynamic register_form_dynamic[]
  route_user            route_user[]
  role                  role?                   @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__user__role_id__6C190EBB")
  schedule              schedule?               @relation(fields: [schedule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_schedule")
  user_contact          user_contact[]
  vacation              vacation[]
}

model user_contact {
  id              Int     @id(map: "PK__user_con__3213E83F19C1A5EC") @default(autoincrement())
  street          String? @db.VarChar(100)
  outer_number    String? @db.VarChar(10)
  interior_number String? @db.VarChar(10)
  cologne         String? @db.VarChar(100)
  municipality    String? @db.VarChar(100)
  cp              Int?
  phone_number    String? @db.VarChar(20)
  email           String? @db.VarChar(100)
  user_id         Int?
  user            user?   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__user_cont__user___7A672E12")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_menu {
  id_user_menu Int  @default(autoincrement())
  user_id      Int?
  id_menu      Int?

  @@ignore
}

model vacation {
  id           Int       @id(map: "PK__vacation__3213E83FCE1BD554") @default(autoincrement())
  user_id      Int?
  date_init    DateTime? @db.Date
  date_end     DateTime? @db.Date
  url_document String?   @db.VarChar(255)
  user         user?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_vacation")
}

model place_form {
  id       Int    @id(map: "PK__place_fo__3213E83F6EF0F5F1") @default(autoincrement())
  place_id Int?
  form_id  Int?
  form     form?  @relation(fields: [form_id], references: [form_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_form_place")
  place    place? @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_place_form")
}
